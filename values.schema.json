{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "required": ["image"],
  "properties": {
    "image": {
      "type": "object",
      "required": ["pullPolicy", "repository"],
      "properties": {
        "repository": {
          "type": "string",
          "pattern": "^[a-z0-9-_]+/[a-z0-9-_]+$"
        },
        "pullPolicy": {
          "type": "string",
          "pattern": "^(Always|Never|IfNotPresent)$"
        }
      }
    },
    "fullNameOverride": {
      "type": "string"
    },
    "nameOverride": {
      "type": "string"
    },
    "nodeSelector": {
      "additionalProperties": {
        "type": ["string", "null"]
      },
      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
      "type": "object"
    },
    "postgresDbUrl": {
      "type": "string",
      "pattern": "^postgres://.*:.*@.*:.*/.*",
      "description": "The url to your postgres database"
    },
    "enableConsole": {
      "type": "boolean",
      "description": "Weather to enable the hasura console"
    },
    "jwtSecret": {
      "type": "string",
      "description": "A path to a json file containing your jwt secret"
    },
    "adminSecret": {
      "type": "string"
    },
    "autoscaling": {
      "type": "object",
      "required": ["enabled"],
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "targetMemoryUtilizationPercentage": {
          "type": "number"
        },
        "targetCluUtilizationPercentage": {
          "type": "number"
        },
        "minReplicas": {
          "type": "number"
        },
        "maxReplicas": {
          "type": "number"
        }
      }
    },
    "replicaCount": {
      "type": "number"
    },
    "resources": {
      "description": "ResourceRequirements describes the compute resource requirements.",
      "properties": {
        "limits": {
          "additionalProperties": {
            "oneOf": [
              {
                "type": ["string", "null"]
              },
              {
                "type": "integer"
              }
            ]
          },
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "object"
        },
        "requests": {
          "additionalProperties": {
            "oneOf": [
              {
                "type": ["string", "null"]
              },
              {
                "type": "integer"
              }
            ]
          },
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "object"
        }
      },
      "type": "object"
    },
    "ingress": {
      "description": "The ingress controller enables external connectivity",
      "required": ["enabled"],
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "hosts": {
          "description": "Hosts is a lists of domains and paths to run hasura on.",
          "required": ["host", "paths"],
          "type": "array",
          "items": {
            "host": {
              "type": "string"
            },
            "paths": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "The path on the host to serve the application"
              }
            }
          }
        },
        "tls": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["hosts", "secretName"],
            "properties": {
              "hosts": {
                "type": "array",
                "items": {
                  "description": "The host to use the tls cert",
                  "type": "string"
                }
              },
              "secretName": {
                "type": "string",
                "description": "The name of your tls key secret"
              }
            }
          }
        }
      }
    },
    "tolerations": {
      "description": "If specified, the pod's tolerations.",
      "items": {
        "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
        "properties": {
          "effect": {
            "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
            "type": ["string", "null"]
          },
          "key": {
            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
            "type": ["string", "null"]
          },
          "operator": {
            "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "type": ["string", "null"]
          },
          "tolerationSeconds": {
            "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
            "type": ["string", "null"]
          }
        },
        "type": "object"
      },
      "type": ["array", "null"]
    },
    "affinity": {
      "description": "Affinity is a group of affinity scheduling rules.",
      "properties": {
        "nodeAffinity": {
          "description": "Node affinity is a group of node affinity scheduling rules.",
          "properties": {
            "preferredDuringSchedulingIgnoredDuringExecution": {
              "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
              "items": {
                "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                "properties": {
                  "preference": {
                    "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                    "properties": {
                      "matchExpressions": {
                        "description": "A list of node selector requirements by node's labels.",
                        "items": {
                          "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                          "properties": {
                            "key": {
                              "description": "The label key that the selector applies to.",
                              "type": "string"
                            },
                            "operator": {
                              "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                              "type": "string"
                            },
                            "values": {
                              "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                              "items": {
                                "type": ["string", "null"]
                              },
                              "type": ["array", "null"]
                            }
                          },
                          "required": ["key", "operator"],
                          "type": "object"
                        },
                        "type": ["array", "null"]
                      },
                      "matchFields": {
                        "description": "A list of node selector requirements by node's fields.",
                        "items": {
                          "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                          "properties": {
                            "key": {
                              "description": "The label key that the selector applies to.",
                              "type": "string"
                            },
                            "operator": {
                              "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                              "type": "string"
                            },
                            "values": {
                              "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                              "items": {
                                "type": ["string", "null"]
                              },
                              "type": ["array", "null"]
                            }
                          },
                          "required": ["key", "operator"],
                          "type": "object"
                        },
                        "type": ["array", "null"]
                      }
                    },
                    "type": "object"
                  },
                  "weight": {
                    "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "required": ["weight", "preference"],
                "type": "object"
              },
              "type": ["array", "null"]
            }
          }
        }
      }
    }
  }
}
